unmap q

# ===================================================================
# == Options
# ===================================================================

# How many columns are there, and what are their relative widths?
set column_ratios 2,5,3

# Which files should be hidden? (regular expression)
set hidden_filter ^\.|^b~|\.(?:pyc|pyo|ali|o)$|^lost\+found$|^__(py)?cache__$
# Preview images in full color with the external command "w3mimgpreview"?
# This requires the console web browser "w3m" and a supported terminal.
# It has been successfully tested with "xterm" and "urxvt" without tmux.
set preview_images true

# Use a unicode "..." character to mark cut-off filenames?
set unicode_ellipsis true

# Which colorscheme to use?  These colorschemes are available by default:
set colorscheme greeny

# Preview files on the rightmost column?
set preview_files false

# Draw a progress bar in the status bar which displays the average state of all
# currently running tasks which support progress bars?
set draw_progress_bar_in_status_bar false

# Display the directory name in tabs?
set dirname_in_tabs true

# Enable the mouse support?
set mouse_enabled false
# How many directory-changes or console-commands should be kept in history?
set max_console_history_size 15

# Flush the input after each key hit?  (Noticable when ranger lags)
set flushinput false

# Enable delete confirmation
set confirm_on_delete true

# ===================================================================
# == Per-tag settings
# ===================================================================

# TeX work directory
setintag \ hidden_filter ^\.|\.(?:acn|acr|alg|aux|bbl|blg|fdb_latexmk|fls|glg|glo|gls|idx|ilg|ind|ist|lof|log|lol|lot|maf|mtc|mtc0|nav|nlo|out|pdfsync|snm|synctex.gz|toc|vrb|xdy|tdo)$

# ===================================================================
# == Command Aliases in the Console
# ===================================================================

alias mimetype eval fm.notify(fm.thisfile.mimetype)

# ===================================================================
# == Define keys for the browser
# ===================================================================

# Basic
map ZA quit!
map Q  quit
copymap ZA ZZ D
map f console travel 
map R shell ./%f
map <C-v> console scout -fitm 

# Tagging / Marking
map "<any> tag_toggle tag=%any movedown=False
map ut tag_remove movedown=False

# Deleting
map <DELETE> trash
map d<DELETE> delete

# Jump to trash
map gt cd ~/.trash

# External Programs
map e eval fm.execute_file(fm.env.get_selection(), label='editor', mode=quantifier)
map yf shell xsel < %f

# Filesystem Operations
map pf console pasta 
map pr console paste_rename 
map cl eval fm.open_console("relink " + os.readlink(fm.thisfile.basename)) if fm.thisfile.is_link else fm.notify("This file is not a symlinc!", bad=True)

# Searching
map / console search_inc 
map ; search_next
map , search_next forward=False

# Paste as root
map pR eval fm.execute_console('shell sudo sh -c "echo mv %c . &"') if fm.do_cut else fm.execute_console('shell sudo sh -c "echo cp -r %c . &"')

# Tabs
map gn tab_new
copymap gc <C-w>
copymap gn <C-t> <C-n>

# Bookmarks
map M<any> set_bookmark %any

map M<bg> draw_bookmarks
copymap M<bg> um<bg> `<bg> '<bg>

# animes
map ¡ play_anime
map > toggle_play

# my garbage
map dv console shell -p verifdl 
map dy diffyanked
map dw console download 
map ,f feh
map ,i console findfile 
map ys store_file
map ps console copy_as_and_link 

# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.

# Help
cmap <F1> eval fm.display_command_help(fm.ui.console)

# Poor man emacs substitutes
cmap <A-left> eval fm.ui.console.move(left=5)
cmap <A-right> eval fm.ui.console.move(right=5)

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1

# vim:set filetype=ranger:
